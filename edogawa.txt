   <Container
          sx={{
            width: isSmallScreen ? "400px" : "100%",
            border: isSmallScreen ? "1px solid black" : "none",
            p: isSmallScreen ? 2 : 0,
          }}
        >
          <Typography variant="h6">Create New Booking</Typography>
          <Divider sx={{ marginBottom: 2 }} />
          <Box component="form" onSubmit={handleAddBooking}>
            <Box
              sx={{
                display: "grid",
                gridTemplateColumns: "1fr 1fr",
                gap: 2,
              }}
            >
              {/* Room Name Select */}
              <Box>
                <FormControl fullWidth>
                  <InputLabel id="room-select-label">Room Name</InputLabel>
                  <Select
                    labelId="room-select-label"
                    name="roomId"
                    value={newBooking.roomId}
                    onChange={handleBookingChange}
                    label="Room Name"
                  >
                    {rooms.map((room) => (
                      <MenuItem key={room.id} value={room.id}>
                        {room.room_name} (Capacity: {room.capacity})
                      </MenuItem>
                    ))}
                  </Select>
                  {warnings?.room_id ? (
                    <FormHelperText error>{warnings.room_id}</FormHelperText>
                  ) : null}
                </FormControl>
              </Box>

              {/* Days of the Week */}
              <Box>
                <FormControl fullWidth>
                  <InputLabel id="days-select-label">
                    Days of the Week
                  </InputLabel>
                  <Select
                    labelId="days-select-label"
                    name="daysOfWeek"
                    multiple
                    value={newBooking.daysOfWeek}
                    onChange={handleDaySelection}
                    renderValue={(selected) => selected.join(", ")}
                  >
                    {[
                      "Monday",
                      "Tuesday",
                      "Wednesday",
                      "Thursday",
                      "Friday",
                      "Saturday",
                      "Sunday",
                    ].map((day) => (
                      <MenuItem key={day} value={day}>
                        <Checkbox
                          checked={newBooking.daysOfWeek.includes(day)}
                        />
                        {day}
                      </MenuItem>
                    ))}
                  </Select>
                  {warnings?.day_of_week ? (
                    <FormHelperText error>
                      {warnings.day_of_week}
                    </FormHelperText>
                  ) : null}
                </FormControl>
              </Box>

              {/* Start Time */}
              <Box >
                <InputLabel>Start Time</InputLabel>
                <LocalizationProvider dateAdapter={AdapterDayjs}>
                  <MobileTimePicker
                    value={newBooking.startTime}
                    onChange={handleStartTimeChange}
                    sx={{
                      '& .MuiInputBase-root': {
                        width:"250px" 
                      },
                    }}
                  />
                </LocalizationProvider>
                {warnings?.start_time ? (
                  <FormHelperText error>{warnings.start_time}</FormHelperText>
                ) : null}
              </Box>

              {/* End Time */}
              <Box>
                <InputLabel>End Time</InputLabel>
                <LocalizationProvider dateAdapter={AdapterDayjs}>
                  <MobileTimePicker
                    value={newBooking.endTime}
                    onChange={handleEndTimeChange}
                    sx={{
                      '& .MuiInputBase-root': {
                        width:"250px" 
                      },
                    }}
                  />
                </LocalizationProvider>
                {warnings?.end_time ? (
                  <FormHelperText error>{warnings.end_time}</FormHelperText>
                ) : null}
              </Box>

              {/* Subject Select */}
              <Box>
                <FormControl fullWidth>
                  <InputLabel id="subject-select-label">Subject</InputLabel>
                  <Select
                    labelId="subject-select-label"
                    name="subjectId"
                    value={newBooking.subjectId}
                    onChange={handleBookingChange}
                    label="Subject"
                  >
                    {subjects.map((subject) => (
                      <MenuItem key={subject.id} value={subject.id}>
                        {subject.subject_name}
                      </MenuItem>
                    ))}
                  </Select>
                  {warnings?.subject_id ? (
                    <FormHelperText error>{warnings.subject_id}</FormHelperText>
                  ) : null}
                </FormControl>
              </Box>

              {/* Section Select */}
              <Box>
                <FormControl fullWidth>
                  <InputLabel id="section-select-label">Section</InputLabel>
                  <Select
                    labelId="section-select-label"
                    name="sectionId"
                    value={newBooking.sectionId}
                    onChange={handleBookingChange}
                    label="Section"
                  >
                    {sections.map((section) => (
                      <MenuItem key={section.id} value={section.id}>
                        {section.section_name}
                      </MenuItem>
                    ))}
                  </Select>
                  {warnings?.section_id ? (
                    <FormHelperText error>{warnings.section_id}</FormHelperText>
                  ) : null}
                </FormControl>
              </Box>

              {/* Date From */}
              <Box>
                <TextField
                  label="Date From"
                  name="date_from"
                  type="date"
                  value={newBooking.date_from}
                  onChange={handleBookingChange}
                  fullWidth
                  InputLabelProps={{
                    shrink: true,
                  }}
                />
                {warnings?.book_from ? (
                  <FormHelperText error>{warnings.book_from}</FormHelperText>
                ) : null}
              </Box>

              {/* Date Until */}
              <Box>
                <TextField
                  label="Date Until"
                  name="date_until"
                  type="date"
                  value={newBooking.date_until}
                  onChange={handleBookingChange}
                  fullWidth
                  InputLabelProps={{
                    shrink: true,
                  }}
                />
                {warnings?.book_until ? (
                  <FormHelperText error>{warnings.book_until}</FormHelperText>
                ) : null}
              </Box>
            </Box>
            {/* Submit Button */}

            <Button variant="contained" type="submit" sx={{ mt: 2 }} fullWidth>
              Add Booking
            </Button>
          </Box>
        </Container>